NAME	=	libasm
LIB		=   libasm.a 			
SRC		=	main.c
ASM_SRC	=	ft_strlen.s ft_strcpy.s	ft_strcmp.s
OBJ		=	$(SRC:.c=.o) $(ASM_SRC:.s=.o)	
RM		=	rm -f
GCC		=	gcc
ASM		= 	nasm
CFLAGS	=	-Wall -Wextra -Werror
AFLAGS	=	-f elf64
GREEN	=	"\033[1;32m"
EOC		=	"\033[0m"

$(LIB)	: 	$(OBJ)
			ar rcs $(LIB) $(OBJ)

$(NAME)	:	$(LIB)
			$(GCC) $(CFLAGS) -o $(NAME) main.c $(LIB) -L. -lasm
			@echo $(GREEN)SUCCESS$(EOC)
# Это правило с шаблоном (pattern rule).
# Оно определяет, как создавать объектные файлы (.o) из соответствующих им исходных файлов на C (.c). 
# %.o: Это цель правила (target pattern). Символ % - это подстановочный символ (wildcard), 
# %.c -  (prerequisite pattern). 
# Это команда (command), которая выполняется для достижения цели (создания .o файла).
# $<: Это автоматическая переменная (automatic variable) в make. Она представляет имя первой зависимости. В данном случае, < будет заменено на имя соответствующего .c файла. Например, если мы создаем pipex.o, то < будет равно pipex.c.
# -o $@: Это опция для компилятора, которая указывает имя выходного файла. $@ - это еще одна автоматическая переменная, которая представляет имя цели. В данном случае, @ будет заменено на имя соответствующего .o файла. Например, если цель — pipex.o, то @ будет равно pipex.o.
# Команда, которая будет выполнена: @$(GCC) $(CFLAGS) -c pipex.c -o pipex.o and it for all files
%.o 	:	%.c
			$(GCC) $(CFLAGS) -c $< -o $@
# название цели (target) в Makefile. Цель all является стандартной и обычно используется как основная цель, которую вы хотите построить при запуске команды make.
# Цель all часто включает в себя все необходимые шаги для сборки проекта, и ее можно рассматривать как "сборка всего".
# Это означает, что перед тем как завершить выполнение цели all, make должен убедиться, что цель $(NAME) (то есть исполняемый файл libasm) существует и актуален.
# Когда вы запускаете команду make, по умолчанию выполняется all.
#  говорит: "Чтобы завершить сборку цели all, сначала убедитесь, что исполняемый файл pipex существует и актуален." 
%.o 	:	%.s
			$(ASM) $(AFLAGS) -o $@ $<

all		:	$(NAME)

run		: 	
			./$(NAME)
clean	:		
			$(RM) $(OBJ)
fclean	:	clean
			$(RM) $(LIB) $(NAME)
re		:	fclean all